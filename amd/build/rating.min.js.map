{"version":3,"file":"rating.min.js","sources":["../src/rating.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n//\n\n/**\n * JavaScript for rating.\n *\n * @copyright  2020 The Open University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['core/key_codes'], function(keys) {\n    /**\n     * Rating object.\n     * @param {Element} questionDiv\n     * @constructor\n     */\n    function Rating(questionDiv) {\n        let clearButton = questionDiv.querySelector('.self-assessment-rating input.clearrating');\n        clearButton.addEventListener('click', handleButtonClick);\n        clearButton.addEventListener('keydown', handleButtonKeyPress);\n\n        let radios = questionDiv.querySelectorAll('.self-assessment-rating input[type=radio]');\n        let stars = questionDiv.querySelectorAll('.self-assessment-rating label');\n        stars.forEach(function(star, index) {\n            star.addEventListener('keydown', function(e) {\n                switch (e.keyCode) {\n                    case keys.enter:\n                    case keys.space:\n                        e.preventDefault();\n                        // Using index+1, because the radio button starting from 0 and labels (stars) starting with 1.\n                        // Reverse the boolean value as a shortcat instead of an if-statement.\n                        radios[index + 1].checked = !radios[index + 1].checked;\n                        return;\n\n                    default:\n                        return;\n                }\n            });\n        });\n\n        /**\n         * Handles clicks on the clear button.\n         *\n         * @param {Event} e\n         */\n        function handleButtonClick(e) {\n            e.preventDefault();\n            clearRating(questionDiv);\n            clearButton.blur();\n        }\n\n        /**\n         * Handles keydown on the clear button.\n         *\n         * @param {KeyboardEvent} e\n         */\n        function handleButtonKeyPress(e) {\n            switch (e.keyCode) {\n                case keys.enter:\n                case keys.space:\n                    e.preventDefault();\n                    clearRating(questionDiv);\n                    clearButton.blur();\n                    return;\n\n                default:\n                    return;\n            }\n        }\n\n        /**\n         * Clear rating and set the rating to not rated.\n         *\n         * @param {Element} questionDiv\n         */\n        function clearRating(questionDiv) {\n            let radios = questionDiv.querySelectorAll('.self-assessment-rating input[type=radio]');\n            radios.forEach(function(radio, index) {\n                if (index === 0) {\n                    radio.checked = true;\n                } else if (radio.checked === true) {\n                    radio.checked = false;\n                }\n            });\n        }\n    }\n\n    return {\n        /**\n         * Initialise star rating for self-assess question behaviour.\n         *\n         * @param {string} questionId id of the outer question div\n         */\n        init: function(questionId) {\n            M.util.js_pending('rating-' + questionId);\n            let questionDiv = document.getElementById(questionId);\n            new Rating(questionDiv);\n            M.util.js_complete('rating-' + questionId);\n        }\n    };\n});\n"],"names":["define","keys","Rating","questionDiv","clearButton","querySelector","addEventListener","e","preventDefault","clearRating","blur","keyCode","enter","space","radios","querySelectorAll","forEach","radio","index","checked","star","init","questionId","M","util","js_pending","document","getElementById","js_complete"],"mappings":";;;;;;AAsBAA,sCAAO,CAAC,mBAAmB,SAASC,eAMvBC,OAAOC,iBACRC,YAAcD,YAAYE,cAAc,6CAC5CD,YAAYE,iBAAiB,kBA2BFC,GACvBA,EAAEC,iBACFC,YAAYN,aACZC,YAAYM,UA7BhBN,YAAYE,iBAAiB,oBAqCCC,UAClBA,EAAEI,cACDV,KAAKW,WACLX,KAAKY,aACNN,EAAEC,iBACFC,YAAYN,kBACZC,YAAYM,8BAzCpBI,OAASX,YAAYY,iBAAiB,sDAsDjCN,YAAYN,aACJA,YAAYY,iBAAiB,6CACnCC,SAAQ,SAASC,MAAOC,OACb,IAAVA,MACAD,MAAME,SAAU,GACS,IAAlBF,MAAME,UACbF,MAAME,SAAU,MA3DhBhB,YAAYY,iBAAiB,iCACnCC,SAAQ,SAASI,KAAMF,OACzBE,KAAKd,iBAAiB,WAAW,SAASC,UAC9BA,EAAEI,cACDV,KAAKW,WACLX,KAAKY,aACNN,EAAEC,sBAGFM,OAAOI,MAAQ,GAAGC,SAAWL,OAAOI,MAAQ,GAAGC,qCAwD5D,CAMHE,KAAM,SAASC,YACXC,EAAEC,KAAKC,WAAW,UAAYH,gBAE1BpB,OADcwB,SAASC,eAAeL,aAE1CC,EAAEC,KAAKI,YAAY,UAAYN"}